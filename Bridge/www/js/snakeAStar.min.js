Bridge.Console.log=function(message){console.log(message)};Bridge.Console.error=function(message){console.error(message)};Bridge.Console.debug=function(message){console.debug(message)};Bridge.assembly("SnakeAStar",function(){"use strict";Bridge.define("SnakeAStar.ASTarSolver",{statics:{cachedPoints:null,neighborItems:null,config:{init:function(){this.cachedPoints=new(System.Collections.Generic.List$1(SnakeAStar.Facing));this.neighborItems=System.Array.init(3,0,SnakeAStar.Facing)}},getInput:function(board){var $t,point,fScore,index,tuple,currentPoint,currentSnake,endTicks,currentPointHashCode,newPoint,neighbor,newSnake,neighborHashCode,tentative_gScore;if(SnakeAStar.ASTarSolver.cachedPoints.getCount()>0)return point=SnakeAStar.ASTarSolver.cachedPoints.getItem(0),SnakeAStar.ASTarSolver.cachedPoints.removeAt(0),point;var startTicks=window.performance.now(),start=board.snake.getHead(),goal=board.dot,fakeBoard=new SnakeAStar.Board.ctor(board),startSnake=new SnakeAStar.Snake.ctor(board.snake),closedSet=new(System.Collections.Generic.List$1(System.Int32)),openSet=function(_o1){return _o1.add(start.hashCode),_o1}(new(System.Collections.Generic.List$1(System.Int32))),cameFrom=new(System.Collections.Generic.Dictionary$2(System.Int32,SnakeAStar.Point)),gScore=new(System.Collections.Generic.Dictionary$2(System.Int32,System.Double));for(gScore.set(start.hashCode,0),fScore=new(System.Collections.Generic.List$1(Object)),fScore.add({item1:startSnake,item2:SnakeAStar.ASTarSolver.distance(start,goal)});openSet.getCount()>0;){var lowest=System.Double.max,itemIndex=-1,item=null;for(index=0;index<fScore.getCount();index=index+1|0)tuple=fScore.getItem(index),tuple.item2<=lowest&&(item=tuple,lowest=tuple.item2,itemIndex=index);if(currentPoint=item.item1.getHead(),currentSnake=item.item1,currentPoint.hashCodeNoFacing===goal.hashCodeNoFacing)return SnakeAStar.ASTarSolver.cachedPoints=SnakeAStar.ASTarSolver.reconstruct(cameFrom,currentPoint),endTicks=window.performance.now(),Bridge.Console.log(System.String.format("{0} ticks with {1} moves",endTicks-startTicks,SnakeAStar.ASTarSolver.cachedPoints.getCount())),SnakeAStar.ASTarSolver.getInput(board);for(currentPointHashCode=currentPoint.hashCode,openSet.remove(currentPointHashCode),closedSet.add(currentPointHashCode),newPoint=!1,$t=Bridge.getEnumerator(SnakeAStar.ASTarSolver.neighbors(currentPoint));$t.moveNext();)if(neighbor=$t.getCurrent(),newSnake=new SnakeAStar.Snake.ctor(currentSnake),newSnake.setFacing(neighbor),fakeBoard.snake=newSnake,fakeBoard.tick(!1)){if(neighborHashCode=newSnake.getHead().hashCode,closedSet.contains(neighborHashCode))continue;if(tentative_gScore=gScore.get(currentPointHashCode)+SnakeAStar.ASTarSolver.distance(currentPoint,newSnake.getHead()),openSet.contains(neighborHashCode)){if(tentative_gScore>=gScore.get(neighborHashCode))continue}else openSet.add(neighborHashCode);cameFrom.set(neighborHashCode,currentPoint);gScore.set(neighborHashCode,tentative_gScore);fScore.add({item1:newSnake,item2:SnakeAStar.ASTarSolver.distance(newSnake.getHead(),goal)});newPoint=!0}newPoint||fScore.removeAt(itemIndex)}return SnakeAStar.Facing.None},reconstruct:function(cameFrom,current){var points=new(System.Collections.Generic.List$1(SnakeAStar.Facing));for(points.add(current.facing);cameFrom.containsKey(current.hashCode);)current=cameFrom.get(current.hashCode),points.add(current.facing);return points.reverse(),points.removeAt(0),points},neighbors:function(current){switch(current.facing){case SnakeAStar.Facing.Up:SnakeAStar.ASTarSolver.neighborItems[0]=SnakeAStar.Facing.Up;SnakeAStar.ASTarSolver.neighborItems[1]=SnakeAStar.Facing.Left;SnakeAStar.ASTarSolver.neighborItems[2]=SnakeAStar.Facing.Right;break;case SnakeAStar.Facing.Down:SnakeAStar.ASTarSolver.neighborItems[0]=SnakeAStar.Facing.Down;SnakeAStar.ASTarSolver.neighborItems[1]=SnakeAStar.Facing.Left;SnakeAStar.ASTarSolver.neighborItems[2]=SnakeAStar.Facing.Right;break;case SnakeAStar.Facing.Left:SnakeAStar.ASTarSolver.neighborItems[0]=SnakeAStar.Facing.Left;SnakeAStar.ASTarSolver.neighborItems[1]=SnakeAStar.Facing.Up;SnakeAStar.ASTarSolver.neighborItems[2]=SnakeAStar.Facing.Down;break;case SnakeAStar.Facing.Right:SnakeAStar.ASTarSolver.neighborItems[0]=SnakeAStar.Facing.Right;SnakeAStar.ASTarSolver.neighborItems[1]=SnakeAStar.Facing.Up;SnakeAStar.ASTarSolver.neighborItems[2]=SnakeAStar.Facing.Down;break;default:throw new System.ArgumentOutOfRangeException;}return SnakeAStar.ASTarSolver.neighborItems},distance:function(start,goal){var x1=((goal.x-start.x|0)+SnakeAStar.Program.Width|0)%SnakeAStar.Program.Width,y1=((goal.y-start.y|0)+SnakeAStar.Program.Height|0)%SnakeAStar.Program.Height,x2=((start.x-goal.x|0)+SnakeAStar.Program.Width|0)%SnakeAStar.Program.Width,y2=((start.y-goal.y|0)+SnakeAStar.Program.Height|0)%SnakeAStar.Program.Height;return Math.sqrt(Math.min(x1*x1|0,x2*x2|0)+Math.min(y1*y1|0,y2*y2|0)|0)}}});Bridge.define("SnakeAStar.Board",{statics:{r:null,config:{init:function(){this.r=new System.Random.ctor}},start:function(width,height,startX,startY,facing){var board=new SnakeAStar.Board.$ctor1(width,height);return board.snake=new SnakeAStar.Snake.$ctor1(startX,startY,facing),board.newDot(),board}},width:0,height:0,snake:null,dot:null,$ctor1:function(width,height){this.$initialize();this.width=width;this.height=height},ctor:function(original){this.$initialize();this.width=original.width;this.height=original.height;this.dot=original.dot;this.snake=new SnakeAStar.Snake.ctor(original.snake)},tick:function(real){real===void 0&&(real=!0);var movePoint,snakeHead=this.snake.getHead();switch(snakeHead.facing){case SnakeAStar.Facing.Up:movePoint=SnakeAStar.Point.getPoint(snakeHead.x,snakeHead.y-1|0,snakeHead.facing);break;case SnakeAStar.Facing.Down:movePoint=SnakeAStar.Point.getPoint(snakeHead.x,snakeHead.y+1|0,snakeHead.facing);break;case SnakeAStar.Facing.Left:movePoint=SnakeAStar.Point.getPoint(snakeHead.x-1|0,snakeHead.y,snakeHead.facing);break;case SnakeAStar.Facing.Right:movePoint=SnakeAStar.Point.getPoint(snakeHead.x+1|0,snakeHead.y,snakeHead.facing);break;default:throw new System.ArgumentOutOfRangeException;}return this.snake.containsPoint(movePoint.hashCodeNoFacing)?!1:(movePoint.hashCodeNoFacing===this.dot.hashCodeNoFacing?(this.snake.insertPoint(movePoint),real&&this.newDot()):this.snake.insertAndMove(movePoint),!0)},newDot:function(){for(;;)if(this.dot=SnakeAStar.Point.getPoint(SnakeAStar.Board.r.next$2(0,this.width),SnakeAStar.Board.r.next$2(0,this.height),SnakeAStar.Facing.None),!this.snake.containsPoint(this.dot.hashCodeNoFacing))break}});Bridge.define("SnakeAStar.Facing",{$kind:"enum",statics:{Up:1,Down:2,Left:3,Right:4,None:5}});Bridge.define("SnakeAStar.Point",{statics:{ctor:function(){for(var y,x=0;x<SnakeAStar.Program.Width;x=x+1|0)for(y=0;y<SnakeAStar.Program.Height;y=y+1|0)SnakeAStar.Point.facingPoints.add(((x*1e5|0)+(y*10|0)|0)+1|0,new SnakeAStar.Point(x,y,SnakeAStar.Facing.Up)),SnakeAStar.Point.facingPoints.add(((x*1e5|0)+(y*10|0)|0)+2|0,new SnakeAStar.Point(x,y,SnakeAStar.Facing.Down)),SnakeAStar.Point.facingPoints.add(((x*1e5|0)+(y*10|0)|0)+3|0,new SnakeAStar.Point(x,y,SnakeAStar.Facing.Left)),SnakeAStar.Point.facingPoints.add(((x*1e5|0)+(y*10|0)|0)+4|0,new SnakeAStar.Point(x,y,SnakeAStar.Facing.Right)),SnakeAStar.Point.facingPoints.add(((x*1e5|0)+(y*10|0)|0)+5|0,new SnakeAStar.Point(x,y,SnakeAStar.Facing.None))},facingPoints:null,config:{init:function(){this.facingPoints=new(System.Collections.Generic.Dictionary$2(System.Int32,SnakeAStar.Point))}},getPoint:function(x,y,facing){return x<0?x=x+SnakeAStar.Program.Width|0:x>=SnakeAStar.Program.Width&&(x=x-SnakeAStar.Program.Width|0),y<0?y=y+SnakeAStar.Program.Height|0:y>=SnakeAStar.Program.Height&&(y=y-SnakeAStar.Program.Height|0),SnakeAStar.Point.facingPoints.get(((x*1e5|0)+(y*10|0)|0)+facing|0)}},hashCode:0,hashCodeNoFacing:0,x:0,y:0,facing:0,ctor:function(x,y,facing){this.$initialize();this.x=x;this.y=y;this.facing=facing;this.generateHashCodes()},toString:function(){return System.String.format("{0}: {1} {2} {3}","Facing",this.facing,this.x,this.y)},generateHashCodes:function(){this.hashCode=((this.x*1e5|0)+(this.y*10|0)|0)+this.facing|0;this.hashCodeNoFacing=(this.x*1e5|0)+this.y|0}});Bridge.define("SnakeAStar.Program",{statics:{Width:100,Height:100,BlockSize:2,context:null,getInput:function(board){return SnakeAStar.ASTarSolver.getInput(board)},draw:function(board){for(var x,snakeHead=board.snake.getHead(),y=0;y<board.height;y=y+1|0)for(x=0;x<board.width;x=x+1|0)board.dot.x===x&&board.dot.y===y?SnakeAStar.ScreenManager.setPosition(SnakeAStar.Program.context,x,y,"red"):board.snake.containsPoint$1(x,y)?snakeHead.x===x&&snakeHead.y===y?SnakeAStar.ScreenManager.setPosition(SnakeAStar.Program.context,x,y,"green"):SnakeAStar.ScreenManager.setPosition(SnakeAStar.Program.context,x,y,"blue"):SnakeAStar.ScreenManager.setPosition(SnakeAStar.Program.context,x,y,"transparent")}},$main:function(){var canvas=Bridge.cast(document.createElement("canvas"),HTMLCanvasElement),ticks,board,interval;canvas.width=200;canvas.height=200;SnakeAStar.Program.context=canvas.getContext("2d");SnakeAStar.Program.context.mozImageSmoothingEnabled=!1;SnakeAStar.Program.context.msImageSmoothingEnabled=!1;SnakeAStar.Program.context.imageSmoothingEnabled=!1;document.body.appendChild(canvas);ticks=0;board=SnakeAStar.Board.start(SnakeAStar.Program.Width,SnakeAStar.Program.Height,3,3,SnakeAStar.Facing.Up);SnakeAStar.Program.draw(board);interval=0;interval=window.setInterval(function(){var facing=SnakeAStar.Program.getInput(board);if(facing===SnakeAStar.Facing.None){SnakeAStar.Program.draw(board);window.alert(System.String.format("Dead, no moves! {0} Length in {1} ticks.",board.snake.points.getCount(),ticks));window.clearInterval(interval);return}if(board.snake.setFacing(facing),!board.tick()){SnakeAStar.Program.draw(board);window.alert(System.String.format("Dead collided! {0} Length in {1} ticks.",board.snake.points.getCount(),ticks));window.clearInterval(interval);return}SnakeAStar.Program.draw(board);ticks=ticks+1|0},0)}});Bridge.define("SnakeAStar.ScreenManager",{statics:{ctor:function(){for(var y,x=0;x<SnakeAStar.Program.Width;x=x+1|0)for(y=0;y<SnakeAStar.Program.Height;y=y+1|0)SnakeAStar.ScreenManager.console[(x*SnakeAStar.Program.Width|0)+y|0]="transparent"},console:null,currentFillStyle:null,config:{init:function(){this.console=System.Array.init(1e4,null,String)}},setPosition:function(context,x,y,color){Bridge.referenceEquals(SnakeAStar.ScreenManager.console[(x*SnakeAStar.Program.Width|0)+y|0],color)||(SnakeAStar.ScreenManager.console[(x*SnakeAStar.Program.Width|0)+y|0]=color,Bridge.referenceEquals(color,"transparent")?context.clearRect(x*SnakeAStar.Program.BlockSize|0,y*SnakeAStar.Program.BlockSize|0,SnakeAStar.Program.BlockSize,SnakeAStar.Program.BlockSize):(Bridge.referenceEquals(SnakeAStar.ScreenManager.currentFillStyle,color)||(context.fillStyle=color,SnakeAStar.ScreenManager.currentFillStyle=color),context.fillRect(x*SnakeAStar.Program.BlockSize|0,y*SnakeAStar.Program.BlockSize|0,SnakeAStar.Program.BlockSize,SnakeAStar.Program.BlockSize)))}}});Bridge.define("SnakeAStar.Snake",{points:null,$ctor1:function(x,y,facing){this.$initialize();var facingPoint=SnakeAStar.Point.getPoint(x,y,facing);this.points=function(_o2){return _o2.add(facingPoint),_o2}(new(System.Collections.Generic.List$1(SnakeAStar.Point))(2))},ctor:function(original){this.$initialize();this.points=new(System.Collections.Generic.List$1(SnakeAStar.Point))(original.points.getCount()+1|0);this.points.addRange(original.points)},getHead:function(){return this.points.getItem(0)},setHead:function(value){this.points.setItem(0,value)},containsPoint$1:function(x,y){var pointHashCodeNoFacing=(x*1e5|0)+y|0;return this.containsPoint(pointHashCodeNoFacing)},containsPoint:function(hashCodeNoFacing){for(var pointCount=this.points.getCount(),i=0;i<pointCount;i=i+1|0)if(this.points.getItem(i).hashCodeNoFacing===hashCodeNoFacing)return!0;return!1},insertPoint:function(movePoint){this.points.insert(0,movePoint)},insertAndMove:function(movePoint){this.points.insert(0,movePoint);var last=this.points.getCount()-1|0;this.points.removeAt(last)},setFacing:function(facing){this.setHead(SnakeAStar.Point.getPoint(this.getHead().x,this.getHead().y,facing))}})});